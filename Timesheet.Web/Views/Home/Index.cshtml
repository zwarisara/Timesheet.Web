@model Timesheet.Web.Models.HomeModel
@{
    ViewBag.Title = "Home";
}


<!DOCTYPE HTML>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Highcharts Example</title>

    <style type="text/css">
        .highcharts-figure, .highcharts-data-table table {
            min-width: 320px;
            max-width: 800px;
            margin: 1em auto;
        }

        .highcharts-data-table table {
            font-family: Verdana, sans-serif;
            border-collapse: collapse;
            border: 1px solid #EBEBEB;
            margin: 10px auto;
            text-align: center;
            width: 100%;
            max-width: 500px;
        }

        .highcharts-data-table caption {
            padding: 1em 0;
            font-size: 1.2em;
            color: #555;
        }

        .highcharts-data-table th {
            font-weight: 600;
            padding: 0.5em;
        }

        .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
            padding: 0.5em;
        }

        .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
            background: #f8f8f8;
        }

        .highcharts-data-table tr:hover {
            background: #f1f7ff;
        }


        input[type="number"] {
            min-width: 50px;
        }
    </style>
</head>
<body>
    <button type="button" id="btnSearch" class="btn btn-primary" style="padding: 4px 5px; width: 100px;" onclick="ExplainPanel();"><i class="fa fa-search"></i>&nbsp;Search</button>
    <button type="button" id="btnGenChart" class="btn btn-primary" style="padding: 4px 5px; width: 100px;" onclick="GenChartPie();"><i class="fa fa-search"></i>&nbsp;GenChartPie</button>
    <button type="button" id="btnGenChart" class="btn btn-primary" style="padding: 4px 5px; width: 100px;" onclick="GenChartColumn();"><i class="fa fa-search"></i>&nbsp;GenChartColumn</button>
    <script src="~/Charts/highcharts.js"></script>
    <script src="~/Charts/modules/exporting.js"></script>
    <script src="~/Charts/modules/export-data.js"></script>
    <script src="~/Charts/modules/accessibility.js"></script>

    <div class="panel-body">
        <table id="tableChart" class="display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Row Labels</th>
                    <th>Sum of MAN_DAY</th>
                </tr>
            </thead>
        </table>
    </div>

    <figure class="highcharts-figure">
        <div id="container"></div>
        <p class="highcharts-description">
            <label id="lbchart">

            </label>
        </p>
    </figure>


    @section scripts {
        <script type="text/javascript">
            var obj = [];
            var newArray = [];
            var period_day = [];
            //var newArray2 = [];
            function GetdayoMonth(maxday) {
                var textday = "";
                var i;
                for (i = 1; i < maxday; i++) {
                    textday += i + ",";
                }
                textday = textday + maxday;
                period_day = textday.split(',');
            }

            function GendayoMonth() {

                    var Month = new Date().getMonth();
                    var Year = new Date().getFullYear();
                    int_d = new Date(Year, Month + 1);
                    d = new Date(int_d - 1).getDate();
                    GetdayoMonth(d)
             }


            function GenChartColumn() {
                GendayoMonth()
                Highcharts.chart('container', {
                    chart: {
                        type: 'column'
                    },
                    title: {
                        text: 'Monthly Average Rainfall'
                    },
                    subtitle: {
                        text: 'Source: WorldClimate.com'
                    },
                    xAxis: {
                        categories: period_day,

                        //categories: [
                        //    'Jan',
                        //    'Feb',
                        //    'Mar',
                        //    'Apr',
                        //    'May',
                        //    'Jun',
                        //    'Jul',
                        //    'Aug',
                        //    'Sep',
                        //    'Oct',
                        //    'Nov',
                        //    'Dec'

                        //],

                        crosshair: true
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Man-days'
                        }
                    },
                    tooltip: {
                        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                            '<td style="padding:0"><b>{point.y:.1f} day</b></td></tr>',
                        footerFormat: '</table>',
                        shared: true,
                        useHTML: true
                    },
                    plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            borderWidth: 0
                        }
                    },
                    series: [{
                        name: ['Tokyo'],
                        data: [49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4, 95.6, 54.4]

                    }, {
                        name: 'New York',
                            data: [83.6, 78.8, 98.5, 93.4, 106.0, 84.5, 105.0, 104.3, 91.2, 83.5, 106.6, 92.3, 95.6, 54.4]

                    }, {
                        name: 'London',
                            data: [48.9, 38.8, 39.3, 41.4, 47.0, 48.3, 59.0, 59.6, 52.4, 65.2, 59.3, 51.2, 95.6, 54.4]

                    }, {
                        name: 'Berlin',
                            data: [42.4, 33.2, 34.5, 39.7, 52.6, 75.5, 57.4, 60.4, 47.6, 39.1, 46.8, 51.1, 95.6, 54.4]

                    }]
                });

            }

            function GenChartPie() {
                GetData(obj);
                obj = JSON.stringify(obj);
                Highcharts.chart('container', {
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false,
                        type: 'pie'
                    },
                    title: {
                        text: 'Job Code OCT-2020'
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                    },
                    accessibility: {
                        point: {
                            valueSuffix: '%'
                        }
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                            }
                        }
                    },
                    series: [{
                        name: 'Brands',
                        colorByPoint: true,
                        data: JSON.parse(obj)

                    }]
                });

            }
        </script>

        <script>




            function GetData(obj) {
                newArray = $(obj).map(function (i) {
                    return obj[i].y;
                });
            }
            //function GetData2(obj) {
            //    newArray2 = $(obj).map(function (i) {
            //        //return obj[i], obj[i].BUDGET_AMOUNT;
            //        return obj[i].JOBCODE_NAME;
            //    });
            //}



            function ExplainPanel() {
            var Table = $('#tableChart').DataTable({
                columns: [
                    {
                        data: "name"
                    },
                    {
                        data: "y"
                    }
                ]});
                    $.ajax({
                        url: '@Url.Action("ListChart")',
                        type: 'POST',
                        data: "",
                        success: function (data) {
                            Table.clear();
                            Table.rows.add(data).draw();
                            obj = data;
                        },
                        error: function () {
                            alert("error");
                        }
                    });
            }

        </script>
    }


</body>

</html>
