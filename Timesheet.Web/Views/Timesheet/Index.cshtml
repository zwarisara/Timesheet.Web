@model Timesheet.Web.Models.TimesheetModel
@{
    ViewBag.Title = "Timesheet";
}

<style>
    div.container {
        max-width: 1200px;
    }

    .overlay {
        background: #e9e9e9;
        left: 0;
        opacity: 0.5;
    }

    .radius5px {
        border-radius: 5px;
    }

    .custom-header {
        padding: 10px;
        background-color: black;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

    .panel-body {
        border: 1px solid rgba(128, 128, 128, 0.45);
        border-radius: 5px;
    }

    input, select, textarea {
        max-width: unset;
    }
</style>
<div class="container" style="margin-top: -5px;">
    <div class="col-md-12">
        <div class="panel-default" style="background-color: white;z-index: 10;position: fixed;width: 82.3%;">
            <div class="panel-body" id="panelBody" style="border: 2px solid gray; padding: 0px 0px 0px 20px; ">
                <div class="row col-md-12" style="margin-top: 2%;">
                    <div class="col-md-1 text-right">
                        <label for="name" class="control-label">Date of</label>
                    </div>
                    <div class="col-md-2">
                        <div class="input-group">
                            @Html.TextBoxFor(i => i.DATE_OF, "{0:dd/MM/yyyy}", new { @class = "form-control", id = "DATE_OF", autocomplete = "off", placeholder = "Enter Date" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-3 text-center" is="divType">
                        @Html.RadioButtonFor(model => model.TYPE, "Y", new { id = "TYPE_Y", @class = "checkedRadio", @checked = true })
                        &nbsp;&nbsp;
                        @Html.LabelFor(model => model.TYPE, "วันทำงานปกติ", new { @for = "TYPE_Y" })
                        &nbsp;&nbsp;&nbsp;&nbsp;
                        @Html.RadioButtonFor(model => model.TYPE, "N", new { id = "TYPE_N", @class = "checkedRadio" })
                        &nbsp;&nbsp;
                        @Html.LabelFor(model => model.TYPE, "วันลา", new { @for = "TYPE_N" })
                    </div>
                    <div class="col-md-1 text-right" style="padding: 0px;">
                        <label for="name" class="control-label">Hour</label>
                    </div>
                    <div class="col-md-2">
                        @Html.TextBoxFor(i => i.WORK_HOUR, new { @class = "form-control", @type = "number", @step = "0.5", @min = "0.5", @max = "24" })
                    </div>
                    <div class="col-md-1" style="width: fit-content;">
                        <label for="name" class="control-label">Location</label>
                    </div>
                    <div class="col-md-2" style="padding-left: 1%;">
                        @Html.DropDownListFor(model => model.WORK_LOCATION, new List<SelectListItem>
                           {
                             new SelectListItem { Text = "Home", Value = "Home"},
                             new SelectListItem { Text = "Office", Value = "Office"},
                          }, "-Please Select-", new { @class = "form-control" })
                    </div>
                </div>
                <div class="row col-md-12" style="margin-top: 1%;">
                    <div class="col-md-1 text-right" style="padding: 0px;">
                        <label for="name" class="control-label">Job Code</label>
                    </div>
                    <div class="col-md-11">
                        @Html.DropDownListFor(m => m.JOB_CODE, Model.JOB_CODE_LIST.Select(i => new SelectListItem()
                        {
                            Text = i.JOBCODE_NO + " " + i.JOBCODE_NAME,
                            Value = i.JOBCODE_NO,
                            Selected = i.JOBCODE_NO == Model.JOB_CODE
                        }), "-Please Select-", new { @class = "form-control selectpicker"})
                    </div>
                    <div class="col-md-4" style="padding-left: 0px; display:none;">
                        @Html.TextBoxFor(i => i.JOB_CODE_NAME, new { @class = "form-control", @disabled = true })
                    </div>
                </div>
                <div class="row col-md-12" style="margin-top: 1%; display:none" id="divSubJobCode">
                    <div class="col-md-1" style="padding: 0px; width: fit-content;">
                        <label for="name" class="control-label">Sub Job Code</label>
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(m => m.SUB_JOB_CODE, Model.SUB_JOB_CODE_LIST.Select(i => new SelectListItem()
                      {
                          Text = i.PROJECT_NAME,
                          Value = i.PROJECT_NAME,
                          Selected = i.PROJECT_NAME == Model.SUB_JOB_CODE
                      }), "-Please Select-", new { @class = "form-control" })
                    </div>
                    <div class="col-md-1" style="padding: 0px; width: fit-content; display:none;">
                        <label for="name" class="control-label">Project Name</label>
                    </div>
                    <div class="col-md-3" style="display:none;">
                        @Html.TextBoxFor(i => i.PROJECT_NAME, new { @class = "form-control" })
                    </div>
                    <div class="col-md-1 text-right" style="padding: 0px;">
                        <label for="name" class="control-label">Ticket No.</label>
                    </div>
                    <div class="col-md-4">
                        @Html.TextBoxFor(i => i.TICKET_NO, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row col-md-12" style="margin-top: 1%;">
                    <div class="col-md-1" style="padding: 0px;">
                        <label for="name" class="control-label">Description</label>
                    </div>
                    <div class="col-md-11">
                        @Html.TextAreaFor(i => i.DESCRIPTION, new { @class = "form-control", @rows = "1" })
                    </div>
                </div>
                <div class="col-md-12" style="text-align: center; margin-top: 1%; margin-bottom: 1%">
                    <button type="button" id="btnSave" class="btn btn-success" style="padding: 4px 5px; width: 140px;"><i class="fa fa-floppy-o"></i>&nbsp;Save</button>
                    <button type="button" id="btnClear" class="btn btn-primary" style="padding: 4px 5px; width: 140px;"><i class="fa fa-refresh"></i>&nbsp;Clear</button>
                </div>
            </div>
        </div>
        <div class="panel-default" style="margin-top:20%; z-index: 2;">
            <div class="panel-heading" style="color: white; padding: 5px 5px 5px; text-align: right; margin-top: -2%; border-radius: 5px; z-index: 1;">
                @*background-color: gray !important;*@
                @*<i class="fa fa-list-ul"></i>&nbsp;LIST*@
                <div class="row">
                    <div class="col-md-2 text-left">
                        <button type="button" id="btnPre" class="form-control" style="padding: 4px 5px; color: black; border: none; width: 90px;"><i class="fa fa-angle-double-left"></i>&nbsp;Previous</button>
                    </div>
                    <div class="col-md-8 text-center" style="margin-top: 8px;">
                        <label for="name" class="control-label" id="ShowDate" style="color:black; font-size: 15px"/>
                    </div>
                    <div class="col-md-2 text-right">
                        <button type="button" id="btnNext" class="form-control" style="padding: 4px 5px; color: black; border: none; width: 90px; margin-left: 68px;">Next&nbsp;<i class="fa fa-angle-double-right"></i></button>
                    </div>
                </div>
            </div>
            <div class="panel-body" style="height: 860px;">
                <div class="table-responsive">
                    <table id="tableMyTimesheet" class="display nowrap cell-border" style="width:100%; margin-top: 2%; margin-top: -8px;">
                        <thead class="cell-border">
                            <tr>
                                <th>Date of</th>
                                <th>Job Code</th>
                                <th>Job Name</th>
                                <th>Sub Job Code</th>
                                <th>Ticket No.</th>
                                <th>Hour</th>
                                <th>Location</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {

            $('.selectpicker').selectpicker({
        liveSearch: true,
        showSubtext: true
    });

        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);

            $('#ShowDate').html(GetDate());

    $('#DATE_OF').datetimepicker({ format: "DD/MM/YYYY", useCurrent: false });/*, minDate: firstDay, maxDate: lastDay*/

    var Table = $('#tableMyTimesheet').DataTable({
        aaSorting: [[0, "asc"]],
        responsive: true,
        filter: false,
        lengthChange: false,
        retrieve: true,
        iDisplayLength: 20,
        className: "dt-center",
        fnCreatedRow: function (nRow, aData, iDataIndex) {
            console.log('iDataIndex ---------->', iDataIndex);
            aData[9] = '<button class="btn btn-primary editor_edit" onclick="EditEmployee("'+iDataIndex+'")" style="width: 28px; height:24px; padding: 2px;"> <i class="fa fa-edit"></i> </button>&nbsp;<button class="btn btn-danger editor_remove" data-toggle="modal" data-target="#modalDeleteDialog" onclick="DeleteEmployee("' +iDataIndex+ '")" style="width: 28px; height:24px; padding: 2px;"> <i class="fa fa-trash"></i> </button>'
            console.log('aData[9] ---------->', aData[9]);
            $(nRow).attr('id', iDataIndex); 
    }
    });

        $('#JOB_CODE').on('change', function (e)
        {
            $.ajax({
                url: '@Url.Action("GetJobCodeName")',
                type: 'POST',
                data: { job_code : $('#JOB_CODE').val() },
                success: function (data) {
                    $('#JOB_CODE_NAME').val(data.Name);
                    }
             });

        if ($('#JOB_CODE').val() == '901485000124') {
            $("#divSubJobCode").css("display", "block");
        }
        else
        {
            $("#divSubJobCode").css("display", "none");
            $('#SUB_JOB_CODE').val('');
            $('#PROJECT_NAME').val('');
            $('#TICKET_NO').val('');
        }
        });

        $('#WORK_HOUR').on('change', function (e)
        {
            var input = parseFloat($('#WORK_HOUR').val())
            if (input <= 0 || input > 24)
            {
                $('#WORK_HOUR').val('');
                toastr.warning('กรุณาระบุชั่วโมงการทำงานให้ถูกต้อง !');
            }
        });

            $('#btnClear').on('click', function () {
                $('#DATE_OF').val(GetDateFormat());
                $('#JOB_CODE').val('');
                $('#JOB_CODE_NAME').val('');
                $('#SUB_JOB_CODE').val('');
                $('#PROJECT_NAME').val('');
                $('#TICKET_NO').val('');
                $('#WORK_HOUR').val('');
                $('#WORK_LOCATION').val('');
                $('#DESCRIPTION').val('');
                $('input[name=TYPE]').filter('[value=Y]').prop('checked', true);
                $("#divSubJobCode").css("display", "none");
            });

            //$('.checkedRadio').on('change', function () {
            //    debugger;
            //    var checkedRadio = $('input[name="TYPE"]:checked').val();
            //    if (checkedRadio == "Y") {
            //    console.log('Y')
            //    $('input[name=TYPE]').filter('[value=N]').prop('checked', true);
            //}
            //    else {
            //        console.log('N')
            //    $('input[name=TYPE]').filter('[value=Y]').prop('checked', true);
            //}
        //});

            $("#btnSave").on('click', function (e) {

                if (FieldIsExist())
                { 

                var objDtOf = $('#DATE_OF').val().split('/');
                var strObjDtOf = objDtOf[1] + '/' + objDtOf[0] + '/' + objDtOf[2];
                
                var param = {
                    DATE_OF : strObjDtOf,
                    WORK_HOUR : $('#WORK_HOUR').val(),
                    WORK_LOCATION : $('#WORK_LOCATION').val(),
                    JOB_CODE: $('#JOB_CODE').val(),
                    JOB_CODE_NAME: $('#JOB_CODE_NAME').val(),
                    JOB_CODE: $('#JOB_CODE').val(),
                    SUB_JOB_CODE: $('#SUB_JOB_CODE').val(),
                    PROJECT_NAME: $('#PROJECT_NAME').val(),
                    TICKET_NO: $('#TICKET_NO').val(),
                    DESCRIPTION: $('#DESCRIPTION').val()
                };

         $.ajax({
                url: '@Url.Action("SaveTimeSheet")',
                type: 'POST',
                data: param,
                success: function (data) {
                    console.log('data.result ------------> ',data.result)
                    }
         });
                    }

    });


        })

        function GetDateFormat()
        {
            var d = new Date();

            var month = d.getMonth()+1;
            var day = d.getDate();

            var output = (day < 10 ? '0' : '') + day + '/' +
                (month<10 ? '0' : '') + month + '/' +
                d.getFullYear();

            return output;
        }

        function EditEmployee(id) {
            console.log('id -------------------->',id)
            @*$.get('@Url.Action("Edit")', { ID: id }, function (data) {
                $(".Edit").html(data);
                $("#modalEditDialog").modal();
            });*@
        }

        function DeleteEmployee(id, name) {
            if (id != '' || id != null) {
                var nameConfirm = 'Do you confirm delete Menu name "' + name + '" ?';
                $('#txtDelete').html(nameConfirm);
                $('#btnConfirmDelete').val(id)
            }
        }

        function GetDate()
        {
            Date.prototype.toShortFormat = function() {

            let monthNames =["January","February","March","April",
                              "May","June","July","August",
                              "September", "October","November","December"];
    
            let monthIndex = this.getMonth();
            let monthName = monthNames[monthIndex];
    
            let year = this.getFullYear();
    
                return `${monthName}, ${year}`;  
            }

            // Now any Date object can be declared

            let anyDate = new Date();
            return anyDate.toShortFormat();
        }

        function FieldIsExist()
        {
            if ($('#DATE_OF').val() == '')
            {
                toastr.warning('Please choose Date Of !');
                return false;
            }
            if ($('#WORK_HOUR').val() == '')
            {
                toastr.warning('Please fill Work Hour !');
                 return false;
            }
            if ($('#WORK_LOCATION').val() == '')
            {
                toastr.warning('Please select Work Location !');
                return false;
            }
            if ($('#JOB_CODE').val() == '')
            {
                toastr.warning('Please select Job Code !');
                return false;
            }
            if ($('#DESCRIPTION').val() == '')
            {
                toastr.warning('Please fill Description !');
                 return false;
            }

            if ($('#JOB_CODE').val() == '901485000124')
            {
                if ($('#SUB_JOB_CODE').val() == '')
                {
                    toastr.warning('Please select Sub Job Code !');
                     return false;
                }
                if ($('#SUB_JOB_CODE').val() == 'งาน Support จริง และ Incident' && $('#TICKET_NO').val() == '')
                {
                    toastr.warning('Please fill Ticket No !');
                     return false;
                }
            }

            return true;
        }

    </script>
}

